- name: Reaching remote digital ocean servers...
  #hosts: digoc
  #hosts: redhat
  hosts: localhost
  #hosts: win
  #become: yes
  #become_user: leonardopuga
  no_log: False
  gather_facts: False
  #ask_become_pass: AnsibleBastion01.
  vars:
    var1: value1
    var2: value2
    ping: False
    createwinuser: False
    createlinuxuser: False
    restart_redhat: False
    poweroff: False
    poweron: False
    createvm: False
    restart_winserver: False
    get_az_vm_win_publicip_facts: True
    subscription_id: 45d75553-0f88-4efd-b859-050ec7ab4fe7
    client_id: c2acf85a-f417-499f-9926-17823d127d8c
    secret: pV_mFMamitKCrF__RmWxZ1Aqz.X4SbfGej
    tenant: 405baca0-0b2e-4d29-89a4-bfa5acb1a117
  tasks:
    - name: Pinging servers
      ping:
        data: crash
      when: vars.ping
      delegate_to: localhost

    - name: create linux user
      user:
        name: usertest
        state: present
      when: vars.createlinuxuser

    
    - name: Restart Redhat server
      azure_rm_virtualmachine:
        resource_group: rg-ansible
        name: vm-manual-redhat-1
        restarted: yes
      when: vars.restart_redhat
      delegate_to: localhost

    - name: PowerOff Redhat VM
      azure_rm_virtualmachine:
        resource_group: rg-ansible
        name: vm-manual-redhat-1
        started: no
      when: vars.poweroff
      delegate_to: localhost

    - name: PowerOn Redhat VM
      azure_rm_virtualmachine:
        resource_group: rg-ansible
        name: vm-manual-redhat-1
      when: vars.poweron
      delegate_to: localhost

    - name: Create VM with defaults
      azure_rm_virtualmachine:
        resource_group: rg-ansible
        name: vm-autocreated-01
        admin_username: leonardopuga
        admin_password: AnsibleInventory01.
        image:
          offer: CentOS
          publisher: OpenLogic
          sku: '7.1'
          version: latest
        vm_size: Standard_B1ms
        virtual_network_name: virtual-network-test-1
        #network_interfaces: vm-manual-redhat-1283
        #public_ip_allocation_method: Static
        remove_on_absent: ["all"]
      when: vars.createvm

    - name: Get Facts from WinServer public IP
      #hosts: azure
      #connection: local
      azure_rm_publicipaddress_info:
        resource_group: rg-ansible
        name: vm-manual-winserver-1
      register: az_vm_publicip
      when: vars.get_az_vm_win_publicip_facts
      #delegate_to: localhost

    - name: Restart WinServer
      azure_rm_virtualmachine:
        resource_group: rg-ansible
        name: vm-manual-winserver-1
        restarted: yes
      when: vars.restart_winserver
      delegate_to: localhost

    - name: create windows user
      win_user:
        name: usertest
        password: "AnsibleInventory01."
        state: present
      when: vars.createwinuser

    - debug:
        msg: "Public IP facts from WinServer AZ VM: {{ az_vm_publicip }}"
      when: vars.get_az_vm_win_publicip_facts

    - debug:
        msg:
          - "var1 = {{ var1 }}"
          - "var2 = {{ var2 }}"
          - "envvar = {{ lookup('env', 'TEST') }}"
          - "ennvar2 = {{  lookup('env', 'TEST2') | default('not defined, so default...', True) }}"

#- debug:
#    msg: "var1"